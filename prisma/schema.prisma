// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  Student
  Instructor
  Admin
}

enum Gender {
  Male
  Female
  Other
}

enum AccountStatus {
  Active
  Suspended
  Deactivated
}

model User {
  id                Int           @id @default(autoincrement()) // Khóa chính, tự động tăng
  fullName          String        @db.VarChar(255) // Họ và tên đầy đủ
  email             String        @unique @db.VarChar(255) // Địa chỉ email duy nhất
  passwordHash      String        @db.VarChar(255) // Mã hóa mật khẩu
  role              Role // Vai trò người dùng (enum)
  gender            Gender        @default(Other) // Giới tính (enum)
  dateOfBirth       DateTime? // Ngày sinh (có thể null)
  phoneNumber       String?       @db.VarChar(20) // Số điện thoại (có thể null)
  addressLine1      String?       @db.VarChar(255) // Địa chỉ 1 (có thể null)
  addressLine2      String?       @db.VarChar(255) // Địa chỉ 2 (có thể null)
  city              String?       @db.VarChar(100) // Thành phố (có thể null)
  state             String?       @db.VarChar(100) // Bang hoặc tỉnh (có thể null)
  postalCode        String?       @db.VarChar(20) // Mã bưu điện (có thể null)
  country           String?       @db.VarChar(100) // Quốc gia (có thể null)
  accountStatus     AccountStatus @default(Active) // Trạng thái tài khoản (enum)
  lastLogin         DateTime? // Thời gian đăng nhập cuối cùng (có thể null)
  createdAt         DateTime      @default(now()) // Thời gian tạo tài khoản
  updatedAt         DateTime      @updatedAt // Thời gian cập nhật tài khoản
  profilePictureURL String?       @db.VarChar(255) // URL ảnh đại diện (có thể null)
  bannerPictureURL  String?       @db.VarChar(255) // URL banner
  description       String?       @db.VarChar(255) // Mô tả người dùng
  inActive          Boolean       @default(false) // Tình trạng hoạt động
  isBlock           Boolean       @default(false) // Có bị chặn không
  createdBy         String?       @db.VarChar(100)
  updatedBy         String?       @db.VarChar(100)
  Instructor        Instructor[]
  Student           Student[]
  Admin             Admin[]
}

model OtpRequest {
  id         Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  email      String   @unique // Địa chỉ email, duy nhất
  otp        String // Mã OTP
  expiryTime DateTime // Thời gian hết hạn của OTP
  createdAt  DateTime @default(now()) // Thời gian tạo
  updatedAt  DateTime @updatedAt // Thời gian cập nhật cuối cùng
}

model Instructor {
  id Int      @id @default(autoincrement()) // Khóa chính, tự động tăng
  userId       Int // Liên kết với bảng Users
  User         User     @relation(fields: [userId], references: [id]) // Quan hệ với bảng Users
  department   String   @db.VarChar(255) // Khoa hoặc bộ môn của giảng viên
  createdAt    DateTime @default(now()) // Thời gian tạo bản ghi
  updatedAt    DateTime @updatedAt // Thời gian cập nhật bản ghi
  createdBy    String?  @db.VarChar(100)
  updatedBy    String?  @db.VarChar(100)

  @@index([userId]) // Tạo chỉ mục cho trường UserId
}

model Student {
  id        Int      @id @default(autoincrement()) // Khóa chính, tự động tăng
  userId           Int // Liên kết với bảng Users
  user             User     @relation(fields: [userId], references: [id]) // Quan hệ với bảng Users
  major            String   @db.VarChar(255) // Chuyên ngành của sinh viên
  yearOfStudy      Int // Năm học của sinh viên
  gpa              Decimal? @db.Decimal(3, 2) // Điểm trung bình tích lũy (GPA)
  graduationStatus String   @default("In Progress") // Trạng thái tốt nghiệp
  createdAt        DateTime @default(now()) // Thời gian tạo bản ghi
  updatedAt        DateTime @updatedAt // Thời gian cập nhật bản ghi
  createdBy        String?  @db.VarChar(100)
  updatedBy        String?  @db.VarChar(100)

  @@index([userId]) // Tạo chỉ mục cho trường userId
}

model Admin {
  id      Int       @id @default(autoincrement()) // Khóa chính, tự động tăng
  userId       Int // Liên kết với bảng Users
  user         User      @relation(fields: [userId], references: [id]) // Quan hệ với bảng Users
  role         String    @default("Moderator") // Vai trò của Admin (SuperAdmin, Moderator, Support)
  accessLevel  Int       @default(1) // Cấp độ quyền truy cập (1 = cơ bản, 5 = cao nhất)
  createdAt    DateTime  @default(now()) // Thời gian tạo bản ghi
  updatedAt    DateTime  @updatedAt // Thời gian cập nhật bản ghi
  lastActivity DateTime? // Thời gian hoạt động gần nhất của Admin
  createdBy    String?   @db.VarChar(100)
  updatedBy    String?   @db.VarChar(100)

  @@index([userId]) // Tạo chỉ mục cho trường userId
}
