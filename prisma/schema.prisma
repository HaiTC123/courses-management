// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  Student
  Instructor
  Admin
}

enum Gender {
  Male
  Female
  Other
}

enum AccountStatus {
  Active
  Suspended
  Deactivated
}

enum CourseStatus {
  DRAFT // Nháp
  PENDING_APPROVAL // Chờ duyệt
  APPROVED // Phê duyệt
  REJECTED // Từ chối
}

enum GoalStatus {
  In_Progress
  Completed
  Failed
}

enum AdvisingStatus {
  Scheduled
  Completed
  Cancelled
  Rejected
  Approved
}

enum ProgressStatus {
  NotStarted
  Completed
}

model User {
  id                Int            @id @default(autoincrement()) // Khóa chính, tự động tăng
  fullName          String         @db.VarChar(255) // Họ và tên đầy đủ
  email             String         @unique @db.VarChar(255) // Địa chỉ email duy nhất
  passwordHash      String         @db.VarChar(255) // Mã hóa mật khẩu
  role              Role // Vai trò người dùng (enum)
  gender            Gender         @default(Other) // Giới tính (enum)
  dateOfBirth       DateTime? // Ngày sinh (có thể null)
  phoneNumber       String?        @db.VarChar(20) // Số điện thoại (có thể null)
  addressLine1      String?        @db.VarChar(255) // Địa chỉ 1 (có thể null)
  addressLine2      String?        @db.VarChar(255) // Địa chỉ 2 (có thể null)
  city              String?        @db.VarChar(100) // Thành phố (có thể null)
  state             String?        @db.VarChar(100) // Bang hoặc tỉnh (có thể null)
  postalCode        String?        @db.VarChar(20) // Mã bưu điện (có thể null)
  country           String?        @db.VarChar(100) // Quốc gia (có thể null)
  accountStatus     AccountStatus  @default(Active) // Trạng thái tài khoản (enum)
  lastLogin         DateTime? // Thời gian đăng nhập cuối cùng (có thể null)
  createdAt         DateTime       @default(now()) // Thời gian tạo tài khoản
  updatedAt         DateTime       @updatedAt // Thời gian cập nhật tài khoản
  profilePictureURL String?        @db.VarChar(255) // URL ảnh đại diện (có thể null)
  bannerPictureURL  String?        @db.VarChar(255) // URL banner
  description       String?        @db.VarChar(255) // Mô tả người dùng
  inActive          Boolean        @default(false) // Tình trạng hoạt động
  isBlock           Boolean        @default(false) // Có bị chặn không
  createdBy         String?        @db.VarChar(100)
  updatedBy         String?        @db.VarChar(100)
  instructor        Instructor?    @relation("UserInstructor") // Liên kết 1:1 tới Instructor
  student           Student?       @relation("UserStudent")
  admin             Admin?         @relation("UserAdmin")
  Notification      Notification[]
  coin              Coin?          @relation("UserCoin")
  AdvisingChat      AdvisingChat[]
}

model OtpRequest {
  id         Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  email      String   @unique // Địa chỉ email, duy nhất
  otp        String // Mã OTP
  expiryTime DateTime // Thời gian hết hạn của OTP
  createdAt  DateTime @default(now()) // Thời gian tạo
  updatedAt  DateTime @updatedAt // Thời gian cập nhật cuối cùng
}

model Instructor {
  id               Int                @id @default(autoincrement()) // Khóa chính, tự động tăng
  userId           Int                @unique // Khóa ngoại, duy nhất
  user             User               @relation("UserInstructor", fields: [userId], references: [id]) // Quan hệ 1:1 với User
  department       String             @db.VarChar(255) // Khoa hoặc bộ môn của giảng viên
  createdAt        DateTime           @default(now()) // Thời gian tạo bản ghi
  updatedAt        DateTime           @updatedAt // Thời gian cập nhật bản ghi
  createdBy        String?            @db.VarChar(100)
  updatedBy        String?            @db.VarChar(100)
  courses          Course[]
  AcademicAdvising AcademicAdvising[]

  @@index([userId]) // Tạo chỉ mục cho trường UserId
}

model Student {
  id               Int                @id @default(autoincrement()) // Khóa chính, tự động tăng
  userId           Int                @unique // Liên kết với bảng Users
  user             User               @relation("UserStudent", fields: [userId], references: [id]) // Quan hệ với bảng Users
  major            String             @db.VarChar(255) // Chuyên ngành của sinh viên
  yearOfStudy      Int // Năm học của sinh viên
  gpa              Decimal?           @db.Decimal(3, 2) // Điểm trung bình tích lũy (GPA)
  graduationStatus String             @default("In Progress") // Trạng thái tốt nghiệp
  createdAt        DateTime           @default(now()) // Thời gian tạo bản ghi
  updatedAt        DateTime           @updatedAt // Thời gian cập nhật bản ghi
  createdBy        String?            @db.VarChar(100)
  updatedBy        String?            @db.VarChar(100)
  Enrollment       Enrollment[]
  CourseCompletion CourseCompletion[]
  Grade            Grade[]
  FailedCourse     FailedCourse[]
  Goal             Goal[]
  AcademicAdvising AcademicAdvising[]

  @@index([userId]) // Tạo chỉ mục cho trường userId
}

model Admin {
  id           Int       @id @default(autoincrement()) // Khóa chính, tự động tăng
  userId       Int       @unique // Liên kết với bảng Users
  user         User      @relation("UserAdmin", fields: [userId], references: [id]) // Quan hệ với bảng Users
  role         String    @default("Moderator") // Vai trò của Admin (SuperAdmin, Moderator, Support)
  accessLevel  Int       @default(1) // Cấp độ quyền truy cập (1 = cơ bản, 5 = cao nhất)
  createdAt    DateTime  @default(now()) // Thời gian tạo bản ghi
  updatedAt    DateTime  @updatedAt // Thời gian cập nhật bản ghi
  lastActivity DateTime? // Thời gian hoạt động gần nhất của Admin
  createdBy    String?   @db.VarChar(100)
  updatedBy    String?   @db.VarChar(100)

  @@index([userId]) // Tạo chỉ mục cho trường userId
}

model Course {
  id                    Int                  @id @default(autoincrement()) // Khóa chính tự động tăng
  courseCode            String               @unique // Mã khóa học (duy nhất)
  courseName            String // Tên khóa học
  description           String? // Mô tả khóa học
  credits               Int                  @default(3) // Số tín chỉ
  instructorId          Int? // Liên kết với bảng Instructors
  prerequisiteCourseIds String? // Khóa học tiên quyết
  durationWeeks         Int                  @default(12) // Thời gian khóa học (tuần)
  category              String? // Phân loại khóa học
  isMandatory           Boolean              @default(false) // Bắt buộc hay không
  semesterOffered       String? // Học kỳ được mở
  price                 Int // Giá khóa học
  isFree                Boolean              @default(false) // Khóa học miễn phí
  createdAt             DateTime             @default(now()) // Thời gian tạo
  updatedAt             DateTime             @updatedAt // Thời gian cập nhật
  backgroundUrl         String?
  createdBy             String? // Người tạo khóa học
  updatedBy             String? // Người cập nhật khóa học
  status                CourseStatus         @default(DRAFT) // Trạng thái khóa học (enum)
  instructor            Instructor?          @relation(fields: [instructorId], references: [id])
  chapters              CourseChapter[] // Một khóa học có nhiều chương
  prerequisite          Prerequisite[]
  enrollment            Enrollment[]
  courseCompletion      CourseCompletion[]
  learningPathCourse    LearningPathCourse[]
  Grade                 Grade[]
  FailedCourse          FailedCourse[]
  Goal                  Goal[]
  Document              Document[]
}

model CourseChapter {
  id                 Int            @id @default(autoincrement()) // Khóa chính tự động tăng
  courseId           Int // Liên kết với bảng Courses
  chapterTitle       String // Tiêu đề chương
  chapterDescription String? // Mô tả chương
  chapterOrder       Int // Thứ tự của chương trong khóa học
  createdAt          DateTime       @default(now()) // Thời gian tạo
  updatedAt          DateTime       @updatedAt // Thời gian cập nhật
  createdBy          String?
  updatedBy          String?
  course             Course         @relation(fields: [courseId], references: [id]) // Liên kết với bảng Courses
  lessons            CourseLesson[] // Một chương có nhiều bài học
}

model CourseLesson {
  id                Int              @id @default(autoincrement()) // Khóa chính tự động tăng
  chapterId         Int // Liên kết với bảng CourseChapters
  lessonTitle       String // Tiêu đề bài học
  lessonDescription String? // Mô tả bài học
  durationMinutes   Int? // Thời lượng của bài học (phút)
  lessonOrder       Int // Thứ tự của bài học trong chương
  createdAt         DateTime         @default(now()) // Thời gian tạo
  updatedAt         DateTime         @updatedAt // Thời gian cập nhật
  createdBy         String?
  updatedBy         String?
  chapter           CourseChapter    @relation(fields: [chapterId], references: [id]) // Liên kết với bảng CourseChapters
  materials         CourseMaterial[] // Một bài học có nhiều tài liệu học tập
}

model CourseMaterial {
  id                  Int          @id @default(autoincrement()) // Khóa chính tự động tăng
  lessonId            Int // Liên kết với bảng CourseLessons
  materialType        String // Loại tài liệu (Video, PDF, Word, PowerPoint, Link)
  materialTitle       String // Tiêu đề tài liệu
  materialURL         String // Đường dẫn tới tài liệu
  materialDescription String? // Mô tả tài liệu
  isRequired          Boolean      @default(true) // Tài liệu bắt buộc
  durationMinutes     Int? // Thời lượng tài liệu (nếu là video, phút)
  createdAt           DateTime     @default(now()) // Thời gian tạo
  updatedAt           DateTime     @updatedAt // Thời gian cập nhật
  createdBy           String?
  updatedBy           String?
  lesson              CourseLesson @relation(fields: [lessonId], references: [id]) // Liên kết với bảng CourseLessons
  progress            Progress[]
}

model File {
  id                  Int      @id @default(autoincrement()) // ID tự động tăng
  fileKey             String   @unique // Key của file từ UploadThing
  fileUrl             String // URL file từ UploadThing
  appUrl              String // Đường dẫn URL trong ứng dụng
  fileName            String // Tên file
  fileType            String // Loại file (ví dụ: image/png)
  fileSize            Int // Kích thước file
  isTemp              Boolean  @default(true) // Đánh dấu file là tạm thời
  associatedTableType String? // Loại bảng liên kết (User, Course, ...)
  associatedTableId   Int? // ID của bảng liên kết
  createdAt           DateTime @default(now()) // Thời gian tạo
  updatedAt           DateTime @updatedAt // Thời gian cập nhật
  createdBy           String?
  updatedBy           String?
}

model Prerequisite {
  id                   Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  courseId             Int // Khóa học yêu cầu điều kiện tiên quyết
  prerequisiteCourseId Int // Khóa học điều kiện tiên quyết
  createdAt            DateTime @default(now()) // Thời gian tạo bản ghi
  updatedAt            DateTime @updatedAt // Thời gian cập nhật bản ghi
  createdBy            String?
  updatedBy            String?
  // Liên kết với khóa học chính và khóa học tiên quyết
  prerequisiteCourse   Course   @relation(fields: [prerequisiteCourseId], references: [id], onDelete: Cascade)
}

model Semester {
  id               Int                @id @default(autoincrement()) // Khóa chính tự động tăng
  name             String             @db.VarChar(100) // Tên học kỳ
  startDate        DateTime // Ngày bắt đầu học kỳ
  endDate          DateTime // Ngày kết thúc học kỳ
  isCurrent        Boolean            @default(false) // Xác định nếu là học kỳ hiện tại
  createdAt        DateTime           @default(now()) // Thời gian tạo bản ghi
  updatedAt        DateTime           @updatedAt // Thời gian cập nhật bản ghi
  createdBy        String?
  updatedBy        String?
  Enrollment       Enrollment[]
  CourseCompletion CourseCompletion[]
  FailedCourse     FailedCourse[]
}

model Enrollment {
  id               Int                @id @default(autoincrement()) // Khóa chính tự động tăng
  studentId        Int // Liên kết với sinh viên trong bảng Students
  courseId         Int // Liên kết với khóa học trong bảng Courses
  semesterId       Int // Liên kết với học kỳ trong bảng Semesters
  enrollmentStatus String             @default("In Progress") // Trạng thái đăng ký  
  enrollmentDate   DateTime           @default(now()) // Ngày đăng ký khóa học
  completionDate   DateTime? // Ngày hoàn thành khóa học (nếu có)
  createdAt        DateTime           @default(now()) // Thời gian tạo bản ghi
  updatedAt        DateTime           @updatedAt // Thời gian cập nhật bản ghi
  createdBy        String?
  updatedBy        String?
  // Quan hệ với các bảng khác
  student          Student            @relation(fields: [studentId], references: [id])
  course           Course             @relation(fields: [courseId], references: [id])
  semester         Semester           @relation(fields: [semesterId], references: [id])
  CourseCompletion CourseCompletion[]
  gradeDetail      Grade?
  FailedCourse     FailedCourse[]
  Progress         Progress[]
}

model CourseCompletion {
  id             Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  studentId      Int // Liên kết với bảng Students
  courseId       Int // Liên kết với bảng Courses
  enrollmentId   Int // Liên kết với bảng Enrollments
  semesterId     Int // Liên kết với bảng Semesters
  completionDate DateTime @default(now()) // Ngày hoàn thành khóa học
  finalGrade     Float? // Điểm số cuối cùng
  createdAt      DateTime @default(now()) // Thời gian tạo bản ghi
  updatedAt      DateTime @updatedAt // Thời gian cập nhật bản ghi
  createdBy      String?
  updatedBy      String?

  student    Student    @relation(fields: [studentId], references: [id])
  course     Course     @relation(fields: [courseId], references: [id])
  enrollment Enrollment @relation(fields: [enrollmentId], references: [id])
  semester   Semester   @relation(fields: [semesterId], references: [id])

  @@map("CourseCompletion")
}

model LearningPath {
  id            Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  pathName      String   @db.VarChar(255) // Tên của lộ trình học tập
  description   String?  @db.Text // Mô tả về lộ trình học tập
  backgroundUrl String?
  createdAt     DateTime @default(now()) // Thời gian tạo lộ trình học tập
  updatedAt     DateTime @updatedAt // Thời gian cập nhật
  createdBy     String?
  updatedBy     String?

  courses LearningPathCourse[] // Liên kết với LearningPathCourses
}

model LearningPathCourse {
  id             Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  learningPathId Int // Liên kết với bảng LearningPath
  courseId       Int // Liên kết với bảng Courses
  sequenceOrder  Int // Thứ tự khóa học trong lộ trình học tập
  isMandatory    Boolean  @default(true) // Xác định khóa học có bắt buộc trong lộ trình học tập hay không
  description    String?  @db.Text // Mô tả khóa học trong lộ trình học tập
  title          String?  @db.VarChar(255) // Tiêu đề khóa học trong lộ trình học tập
  createdAt      DateTime @default(now()) // Thời gian thêm khóa học vào lộ trình học tập
  updatedAt      DateTime @updatedAt // Thời gian cập nhật
  createdBy      String?
  updatedBy      String?

  learningPath LearningPath @relation(fields: [learningPathId], references: [id], onDelete: Cascade) // Khóa ngoại tới LearningPath
  course       Course       @relation(fields: [courseId], references: [id]) // Khóa ngoại tới Course

  @@index([learningPathId]) // Tạo chỉ mục cho trường LearningPathId
  @@index([courseId]) // Tạo chỉ mục cho trường CourseId
}

model Notification {
  id         Int      @id @default(autoincrement()) // Khóa chính, tự động tăng
  senderId   Int // ID của người gửi
  senderName String // Tên người gửi
  receiveId  Int // ID của người nhận
  type       String // Loại thông báo
  rawData    String // Dữ liệu thô của thông báo
  isViewed   Boolean  @default(false) // Trạng thái đã xem
  createdAt  DateTime @default(now()) // Thời gian tạo
  updatedAt  DateTime @updatedAt // Thời gian cập nhật

  // Liên kết với bảng User
  user      User    @relation(fields: [receiveId], references: [id], onDelete: Cascade)
  createdBy String?
  updatedBy String?
}

model Grade {
  id           Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  enrollmentId Int      @unique // Liên kết với bảng Enrollments
  courseId     Int // Liên kết với bảng Courses
  studentId    Int // Liên kết với bảng Students
  grade        Decimal // Điểm số cuối cùng của sinh viên
  gradeDate    DateTime @default(now()) // Ngày điểm số được nhập
  createdAt    DateTime @default(now()) // Thời gian tạo bản ghi
  updatedAt    DateTime @updatedAt // Thời gian cập nhật bản ghi
  createdBy    String?
  updatedBy    String?

  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], onDelete: Cascade)
  course     Course     @relation(fields: [courseId], references: [id]) // Quan hệ với Course
  student    Student    @relation(fields: [studentId], references: [id]) // Quan hệ với Student

  @@index([enrollmentId])
  @@index([courseId])
  @@index([studentId])
}

model FailedCourse {
  id            Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  studentId     Int // Liên kết với bảng Students
  courseId      Int // Liên kết với bảng Courses
  semesterId    Int // Liên kết với bảng Semesters
  enrollmentId  Int // Liên kết với bảng Enrollments
  failureReason String? // Lý do rớt môn
  failedDate    DateTime @default(now()) // Ngày sinh viên bị rớt môn
  createdAt     DateTime @default(now()) // Thời gian tạo bản ghi
  updatedAt     DateTime @updatedAt // Thời gian cập nhật bản ghi
  createdBy     String?
  updatedBy     String?

  student    Student    @relation(fields: [studentId], references: [id]) // Quan hệ với Student
  course     Course     @relation(fields: [courseId], references: [id]) // Quan hệ với Course
  semester   Semester   @relation(fields: [semesterId], references: [id]) // Quan hệ với Semester
  enrollment Enrollment @relation(fields: [enrollmentId], references: [id]) // Quan hệ với Enrollment

  @@index([studentId])
  @@index([courseId])
  @@index([semesterId])
}

model Goal {
  id                   Int        @id @default(autoincrement()) // Khóa chính tự động tăng
  studentId            Int // Liên kết với bảng Students
  courseId             Int // Liên kết với bảng Courses
  targetCompletionDate DateTime // Ngày sinh viên đặt ra để hoàn thành khóa học
  status               GoalStatus @default(In_Progress) // Trạng thái của mục tiêu
  createdAt            DateTime   @default(now()) // Thời gian tạo mục tiêu
  updatedAt            DateTime   @updatedAt // Thời gian cập nhật mục tiêu

  student Student @relation(fields: [studentId], references: [id]) // Quan hệ với Student
  course  Course  @relation(fields: [courseId], references: [id]) // Quan hệ với Course

  @@index([studentId])
  @@index([courseId])
}

model AcademicAdvising {
  id           Int            @id @default(autoincrement()) // Khóa chính tự động tăng
  studentId    Int // Liên kết với bảng Students
  advisorId    Int // Liên kết với bảng Instructors
  advisingDate DateTime       @default(now()) // Ngày và thời gian của buổi tư vấn
  topic        String         @db.VarChar(255) // Chủ đề chính của buổi tư vấn
  notes        String?        @db.Text // Ghi chú hoặc chi tiết về cuộc tư vấn
  status       AdvisingStatus @default(Scheduled) // Trạng thái của buổi tư vấn
  createdAt    DateTime       @default(now()) // Thời gian tạo bản ghi
  updatedAt    DateTime       @updatedAt // Thời gian cập nhật bản ghi

  student      Student        @relation(fields: [studentId], references: [id]) // Quan hệ với Student
  advisor      Instructor     @relation(fields: [advisorId], references: [id]) // Quan hệ với Instructor
  AdvisingChat AdvisingChat[]
  createdBy    String?
  updatedBy    String?

  @@index([studentId])
  @@index([advisorId])
}

model JobConfig {
  id           Int       @id @default(autoincrement())
  status       String // trạng thái
  startTime    DateTime?
  endTime      DateTime?
  cronJob      String? // biểu thức
  typeJob      String // once daily weekly monthly
  rawData      String?
  jobDetail    String? // lưu cấu hình
  key          String    @unique
  typeBusiness String
  createdAt    DateTime  @default(now()) // Thời gian tạo bản ghi
  updatedAt    DateTime  @updatedAt // Thời gian cập nhật bản ghi
  relatedId    Int? // ID liên kết có thể là CourseId hoặc các ID khác
  relatedType  String? // Loại liên kết để xác định loại liên kết (ví dụ: "Course", "Student", etc.)
  createdBy    String?
  updatedBy    String?
}

model Coin {
  id     Int  @id @default(autoincrement()) // Khóa chính tự động tăng
  amount Int // Số lượng coin
  userId Int  @unique // ID của người dùng
  user   User @relation("UserCoin", fields: [userId], references: [id]) // Quan hệ với bảng User
}

model Transaction {
  id        String   @id @default(uuid()) // TransactionID sử dụng UUID
  infor     String? // Thông tin chi tiết về giao dịch
  orderId   Int // ID của đơn hàng liên kết
  createdAt DateTime @default(now()) // Ngày tạo
  updatedAt DateTime @updatedAt // Ngày cập nhật
}

model TransactionHistory {
  id            Int      @id @default(autoincrement()) // ID tự động tăng
  orderId       Int // ID của đơn hàng
  description   String? // Mô tả giao dịch
  userId        Int // ID của người dùng
  object        String? // Đối tượng liên quan (có thể null)
  paymentMethod Int // Phương thức thanh toán
  createdBy     String?
  updatedBy     String?
  createdAt     DateTime @default(now()) // Thời gian tạo
  updatedAt     DateTime @updatedAt // Thời gian cập nhật
}

model Progress {
  id             Int            @id @default(autoincrement()) // Khóa chính tự động tăng
  enrollmentId   Int // Liên kết với bảng Enrollments
  materialId     Int // Liên kết với bảng CourseLessons
  status         ProgressStatus @default(NotStarted) // Trạng thái tiến trình (Not Started, In Progress, Completed)
  completionDate DateTime? // Ngày hoàn thành bài học (nếu có)
  createdAt      DateTime       @default(now()) // Thời gian tạo bản ghi
  updatedAt      DateTime       @updatedAt // Thời gian cập nhật bản ghi
  enrollment     Enrollment     @relation(fields: [enrollmentId], references: [id])
  material       CourseMaterial @relation(fields: [materialId], references: [id], onDelete: Cascade)
  courseId       Int            @default(0)
  createdBy      String?
  updatedBy      String?

  @@index([enrollmentId, materialId], name: "enrollment_lesson_unique")
}

model AdvisingChat {
  id         Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  advisingId Int // Liên kết với bảng AcademicAdvising
  senderId   Int // Người gửi tin nhắn (có thể là sinh viên hoặc giảng viên)
  message    String   @db.Text // Nội dung tin nhắn
  createdAt  DateTime @default(now()) // Thời gian gửi tin nhắn
  updatedAt  DateTime @updatedAt // Thời gian cập nhật bản ghi

  advising  AcademicAdvising @relation(fields: [advisingId], references: [id]) // Quan hệ với AcademicAdvising
  sender    User             @relation(fields: [senderId], references: [id]) // Quan hệ với bảng User để xác định ai gửi
  createdBy String?
  updatedBy String?

  @@index([advisingId])
  @@index([senderId])
}

model CategoryDocument {
  id          Int        @id @default(autoincrement()) // Khóa chính tự động tăng
  name        String     @db.VarChar(100) // Tên danh mục
  description String?    @db.Text // Mô tả danh mục (nếu cần)
  createdAt   DateTime   @default(now()) // Thời gian tạo danh mục
  updatedAt   DateTime   @updatedAt // Thời gian cập nhật
  createdBy   String?
  updatedBy   String?
  Document    Document[]
}

model Document {
  id            Int     @id @default(autoincrement()) // Khóa chính tự động tăng
  courseId      Int? // Khóa ngoại liên kết với bảng Courses (nếu tài liệu liên quan đến khóa học)
  categoryId    Int // Khóa ngoại liên kết với bảng CategoryDocuments
  documentName  String  @db.VarChar(255) // Tên tài liệu
  description   String? @db.Text // Mô tả tài liệu
  accessUrl     String  @db.VarChar(255) // Đường dẫn truy cập tài liệu
  fileType      String  @db.VarChar(255) // Loại tệp tài liệu
  backgroundUrl String  @db.VarChar(255)

  createdAt DateTime @default(now()) // Thời gian tạo tài liệu
  updatedAt DateTime @updatedAt // Thời gian cập nhật

  course    Course?          @relation(fields: [courseId], references: [id]) // Quan hệ với bảng Courses
  category  CategoryDocument @relation(fields: [categoryId], references: [id]) // Quan hệ với bảng CategoryDocuments
  createdBy String?
  updatedBy String?

  @@index([courseId])
  @@index([categoryId])
}
